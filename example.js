var team = {
	name: '',
	tag: '',
	region: '',
	id: '',
	stats: {
		// Huge object generated by updateStats() containing stats
		// for both team and individual players by summonerId
		// from all games within the current season
	},
	details: {
		// Object with information about the team as when
		// pulled from the ~team endpoint, e.g. createDate,
		// ownerId, lastJoinedRankedTeamQueueDate
	},
	// Roster by summonerId
	roster: [29823543, 25622346, 35260363, 20729856, 52337928, 46897122, 21760707, 19565972],
	rosterDetails: [{
		29823543: {
			// Object for each roster member containing general
			// information about them like when pulled from the
			// ~player endpoint, e.g. summonerName
		}
	}],
	// Recent form over latest 20 games (loaded from the ~team
	// endpoint). Win = true, loss = false
	// recentForm[0] = oldest, remove with shift()
	// recentForm[19] = latest, push new with push()
	recentForm: [true, false, true, false, true, true, true, false, false, true, false, false, true, false, true, false, false, true, true, true],
	// List of gameId's of games the team has played during the
	// season generated by updateStats()
	seasonGames: [2329983164, 2329843790, 2329772348, 2289627260],
	seasonGamesDetails: [{
		2329983164: {
			// Object for each match played by the team during
			// the season, to avoid having to reload each and
			// every match from the ~match endpoint again
		}
	}],
	leagueInfo: {
		queue: 'RANKED_TEAM_5x5',
		tierName: '', 				// E.g. 'Fiddlesticks\'s Chimeras'
		tier: '', 					// E.g. 'Silver'
		division: '',				// E.g. 'II'
		leaguePoints: 90,
		isFreshBlood: false,
		isHotStreak: true,
		isInactive: false,
		isVeteran: true,
	},
	// Relevant info for the team as to minimize the amount of
	// queries to the Riot API
	dbVars: {
		// Is this the first time this team is loaded?
		firstLoad: true,
		// Epoch timestamp for the last time this team was
		// reloaded and updated
		lastRefreshed: 1446536944
	}
}